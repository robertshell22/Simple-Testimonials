<?php

/**
 * @file
 * Testimonials module install file.
 */

/**
 * Implements hook_install().
 *
 * Inserts the Testimonials module's schema in the SQL database.
 */
function simple_testimonials_install() {
  variable_set('node_type_testimonial', array('status'));
  $t = get_t();

// Make sure a testimonial content type doesn't already exist
  if (!in_array('testimonial', node_type_get_names())) {
    $type = array(
        'type' => 'testimonial',
        'name' => st('Testimonial'),
        'base' => 'node_content',
        'description' => st("A testimonial for recommendation lists and blocks."),
        'custom' => 1,
        'modified' => 1,
        'locked' => 0,
        'title_label' => 'Headline'
    );

    $type = node_type_set_defaults($type);
    node_type_save($type);

  }

  _simple_testimonials_add_custom_fields();

    // Create the testimonial.testimonial_image field's default file reference.
    $filename = 'testimonial-testimonial-image-default.jpg';
    $origfile = drupal_get_path('module', 'simple_testimonials') . '/images/' . $filename;
    $uri = 'public://' . $filename;
    $file = (object) array(
        'uid' => 1,
        'filename' => $filename,
        'uri' => $origfile,
        'filemime' => 'image/jpg',
        'filesize' => filesize($origfile),
        'status' => FILE_STATUS_PERMANENT,
    );
    $file = file_copy($file, $uri, FILE_EXISTS_REPLACE);
    variable_set('testimonials_testimonial_testimonial_image_fid', $file->fid);
   db_update('system')
    ->fields(array('weight' => 999))
    ->condition('name', 'simple_testimonials', '=')
    ->execute();
}

/**
 * Implements hook_uninstall().
 *
 * Remove the variables, nodes and schema corresponding to the Testimonials module.
 */
function simple_testimonials_uninstall() {

    // Delete the variables we created.
    // General settings.
    variable_del('testimonials_title');
    variable_del('testimonials_description');
    variable_del('testimonials_path');
    variable_del('testimonials_custom_breadcrumb');
    variable_del('testimonials_testimonial_testimonial_image_fid');
  
  // Remove content type and the fields created.
  $testimonial_type = 'testimonial';
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => $testimonial_type));
  $nodeids = array();
  foreach ($result as $row) {
    $nodeids[] = $row->nid;
  }
  node_delete_multiple($nodeids);
  _simple_testimonials_delete_custom_fields();
  node_type_delete($testimonial_type);
  field_purge_batch(500);


  // Clear the cache tables.
  cache_clear_all('*', 'cache', TRUE);
  cache_clear_all('*', 'cache_filter', TRUE);
  cache_clear_all('*', 'cache_menu', TRUE);
  cache_clear_all('*', 'cache_page', TRUE);
}


/**
 * Code examples modified.
 *
 * @see http://www.sitepoint.com/creating-a-new-drupal-node-type/
 * @see http://www.thecarneyeffect.co.uk/creating-custom-content-type-adding-fields-programmatically-drupal-7
 */
function _simple_testimonials_add_custom_fields() {
  foreach (_simple_testimonials_installed_fields() as $field) {
    field_create_field($field);
  }
  foreach (_simple_testimonials_installed_instances() as $fieldinstance) {
    $fieldinstance['entity_type'] = 'node';
    $fieldinstance['bundle'] = 'testimonial';
    field_create_instance($fieldinstance);
  }
}

/**
 * Return the field definitions.
 */
function _simple_testimonials_installed_fields() {
  $t = get_t();
  return array(
    'testimonial_author_name' => array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'max_length' => 255,
      ),
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'field_name' => 'field_testimonial_author_name',
      'type' => 'text',
      'module' => 'text',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
      'deleted' => '0',
      'bundles' => array(
        'node' => array(
          'page',
        ),
      ),
    ),
      'testimonial_author_role' => array(
          'translatable' => '0',
          'entity_types' => array(),
          'settings' => array(
              'max_length' => 255,
          ),
          'foreign keys' => array(
              'format' => array(
                  'columns' => array(
                      'format' => 'format',
                  ),
                  'table' => 'filter_format',
              ),
          ),
          'indexes' => array(
              'format' => array(
                  0 => 'format',
              ),
          ),
          'field_name' => 'field_testimonial_author_role',
          'type' => 'text',
          'module' => 'text',
          'active' => '1',
          'locked' => '0',
          'cardinality' => '1',
          'deleted' => '0',
          'bundles' => array(
              'node' => array(
                  'page',
              ),
          ),
      ),
      'testimonial_author_company' => array(
          'translatable' => '0',
          'entity_types' => array(),
          'settings' => array(
              'max_length' => 255,
          ),
          'foreign keys' => array(
              'format' => array(
                  'columns' => array(
                      'format' => 'format',
                  ),
                  'table' => 'filter_format',
              ),
          ),
          'indexes' => array(
              'format' => array(
                  0 => 'format',
              ),
          ),
          'field_name' => 'field_testimonial_author_company',
          'type' => 'text',
          'module' => 'text',
          'active' => '1',
          'locked' => '0',
          'cardinality' => '1',
          'deleted' => '0',
          'bundles' => array(
              'node' => array(
                  'page',
              ),
          ),
      ),
      'testimonial_text' => array(
          'translatable' => '0',
          'entity_types' => array(),
          'settings' => array(
              'max_length' => 800,
          ),
          'foreign keys' => array(
              'format' => array(
                  'columns' => array(
                      'format' => 'format',
                  ),
                  'table' => 'filter_format',
              ),
          ),
          'indexes' => array(
              'format' => array(
                  0 => 'format',
              ),
          ),
          'field_name' => 'field_testimonial_text',
          'type' => 'text_long',
          'module' => 'text',
          'active' => '1',
          'locked' => '0',
          'cardinality' => '1',
          'deleted' => '0',
          'bundles' => array(
              'node' => array(
                  'page',
              ),
          ),
      ),
    'testimonial_image' => array(
    'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'default_image' => 0,
        'uri_scheme' => 'public',
      ),
      'foreign keys' => array(
      'fid' => array(
        'columns' => array(
          'fid' => 'fid',
        ),
          'table' => 'file_managed',
        ),
      ),
      'indexes' => array(
        'fid' => array(
          0 => 'fid',
        ),
      ),
      'field_name' => 'field_testimonial_image',
      'type' => 'image',
      'module' => 'image',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
      'deleted' => '0',
      'columns' => array(
        'value' => array(
          'type' => 'varchar',
          'size' => '255',
          'not null' => FALSE,
        ),
        'format' => array(
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ),
      ),
      'bundles' => array(
        'node' => array(
          'page',
        ),
      ),
    ),
  );
}

/**
 * Returns the field instances.
 */
function _simple_testimonials_installed_instances() {
  $t = get_t();
  // Position in the question and answer page. Body (text) is 0 and Teaser (Title) is -4.
  return array(
    'testimonial_author_name' => array(
      'label' => 'Author name',
      'widget' => array(
        'weight' => '-3',
        'type' => 'text_textfield',
        'module' => 'text',
        'active' => 1,
        'settings' => array(
          'size' => '60',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'weight' => '2',
          'settings' => array(),
          'module' => 'text',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'weight' => '2',
          'settings' => array(),
          'module' => 'text',
        ),
      ),
      'required' => 1,
      'description' => '(John Smith, John S., etc...)',
      'default_value' => NULL,
      'field_name' => 'field_testimonial_author_name',
      'entity_type' => 'node',
      'bundle' => 'page',
      'deleted' => '0',
    ),
      'testimonial_author_role' => array(
          'label' => 'Author Role',
          'widget' => array(
              'weight' => '-2',
              'type' => 'text_textfield',
              'module' => 'text',
              'active' => 1,
              'settings' => array(
                  'size' => '60',
              ),
          ),
          'settings' => array(
              'text_processing' => '0',
              'user_register_form' => FALSE,
          ),
          'display' => array(
              'default' => array(
                  'label' => 'hidden',
                  'type' => 'text_default',
                  'weight' => '3',
                  'settings' => array(),
                  'module' => 'text',
              ),
              'teaser' => array(
                  'label' => 'hidden',
                  'type' => 'text_default',
                  'weight' => '3',
                  'settings' => array(),
                  'module' => 'text',
              ),
          ),
          'required' => 0,
          'description' => '(Client, Project Manager, etc...)',
          'default_value' => NULL,
          'field_name' => 'field_testimonial_author_role',
          'entity_type' => 'node',
          'bundle' => 'page',
          'deleted' => '0',
      ),
      'testimonial_author_company' => array(
          'label' => 'Company/ Location',
          'widget' => array(
              'weight' => '-1',
              'type' => 'text_textfield',
              'module' => 'text',
              'active' => 1,
              'settings' => array(
                  'size' => '60',
              ),
          ),
          'settings' => array(
              'text_processing' => '0',
              'user_register_form' => FALSE,
          ),
          'display' => array(
              'default' => array(
                  'label' => 'hidden',
                  'type' => 'text_default',
                  'weight' => '4',
                  'settings' => array(),
                  'module' => 'text',
              ),
              'teaser' => array(
                  'label' => 'hidden',
                  'type' => 'text_default',
                  'weight' => '4',
                  'settings' => array(),
                  'module' => 'text',
              ),
          ),
          'required' => 0,
          'description' => '(Google, Chicago, IL, etc...)',
          'default_value' => NULL,
          'field_name' => 'field_testimonial_author_company',
          'entity_type' => 'node',
          'bundle' => 'page',
          'deleted' => '0',
      ),
      'testimonial_text' => array(
          'label' => 'Testimonial',
          'settings' => array(
              'text_processing' => 0,
              'user_register_form' => FALSE,
          ),
          'widget' => array(
              'active' => 1,
              'module' => 'text',
              'settings' => array(
                  'rows' => 3,
              ),
              'type' => 'text_textarea',
              'weight' => 0,
          ),
          'display' => array(
              'default' => array(
                  'label' => 'hidden',
                  'module' => 'text',
                  'settings' => array(),
                  'type' => 'text_default',
                  'weight' => 1,
              ),
              'teaser' => array(
                  'label' => 'hidden',
                  'settings' => array(),
                  'type' => 'hidden',
                  'weight' => 1,
              ),
          ),
          'required' => 1,
          'description' => 'Enter a testimonial, up to 800 characters in length.',
          'default_value' => NULL,
          'field_name' => 'field_testimonial_text',
          'entity_type' => 'node',
          'bundle' => 'page',
          'deleted' => '0',
      ),
    'testimonial_image' => array(
      'bundle' => 'image',
    'deleted' => 0,
    'description' => 'Upload an image of the testimonial author.',
    'display' => array(
       'default' => array(
                'label' => 'hidden',
                'module' => 'image',
                'settings' => array(
                    'image_link' => '',
                    'image_style' => 'testimonial_medium',
                ),
                'type' => 'image',
                'weight' => 0,
            ),
            'teaser' => array(
                'label' => 'hidden',
                'module' => 'image',
                'settings' => array(
                    'image_link' => 'content',
                    'image_style' => 'testimonial_small',
                ),
                'type' => 'image',
                'weight' => 0,
            ),
     ),
    'entity_type' => 'node',
    'field_name' => 'field_testimonial_image',
    'label' => 'Testimonial image',
    'required' => 0,
    'settings' => array(
      'alt_field' => 0,
      'default_image' => 0,
      'file_directory' => 'images/testimonials',
      'file_extensions' => 'png gif jpg jpeg',
      'max_filesize' => '10MB',
      'max_resolution' => '',
      'min_resolution' => '',
      'title_field' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'image',
      'settings' => array(
        'preview_image_style' => 'thumbnail',
        'progress_indicator' => 'bar',
      ),
      'type' => 'image_image',
      'weight' => 1,
     ),
    ),
  );
}

/**
 * Cleanup custom fields on uninstall.
 */
function _simple_testimonials_delete_custom_fields() {
  foreach (array_keys(_simple_testimonials_installed_fields()) as $field) {
    field_delete_field($field);
  }
  $instances = field_info_instances('node', 'testimonial');
  foreach ($instances as $instance_name => $fieldinstance) {
    field_delete_instance($fieldinstance);
  }
}

